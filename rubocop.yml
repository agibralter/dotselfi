AllCops:
  # Include common Ruby source files.
  Include:
    - "**/*.builder"
    - "**/*.fcgi"
    - "**/*.gemspec"
    - "**/*.god"
    - "**/*.jb"
    - "**/*.jbuilder"
    - "**/*.mspec"
    - "**/*.opal"
    - "**/*.pluginspec"
    - "**/*.podspec"
    - "**/*.rabl"
    - "**/*.rake"
    - "**/*.rbuild"
    - "**/*.rbw"
    - "**/*.rbx"
    - "**/*.ru"
    - "**/*.ruby"
    - "**/*.spec"
    - "**/*.thor"
    - "**/*.watchr"
    - "**/*Fastfile"
    - "**/.irbrc"
    - "**/.pryrc"
    - "**/Appraisals"
    - "**/Berksfile"
    - "**/Brewfile"
    - "**/buildfile"
    - "**/Buildfile"
    - "**/Capfile"
    - "**/Cheffile"
    - "**/config.ru"
    - "**/Dangerfile"
    - "**/Deliverfile"
    - "**/Fastfile"
    - "**/Gemfile"
    - "**/Guardfile"
    - "**/Jarfile"
    - "**/Mavenfile"
    - "**/Podfile"
    - "**/Puppetfile"
    - "**/Rakefile"
    - "**/Snapfile"
    - "**/Thorfile"
    - "**/Vagabondfile"
    - "**/Vagrantfile"
  Exclude:
    - "node_modules/**/*"
    - "vendor/**/*"
    - "db/**/*"
  # Default formatter will be used if no `-f/--format` option is given.
  DefaultFormatter: progress
  # Cop names are not displayed in offense messages by default. Change behavior
  # by overriding DisplayCopNames, or by giving the `-D/--display-cop-names`
  # option.
  DisplayCopNames: true
  # Style guide URLs are not displayed in offense messages by default. Change
  # behavior by overriding `DisplayStyleGuide`, or by giving the
  # `-S/--display-style-guide` option.
  DisplayStyleGuide: true
  # When specifying style guide URLs, any paths and/or fragments will be
  # evaluated relative to the base URL.
  StyleGuideBaseURL: https://github.com/bbatsov/ruby-style-guide
  # Extra details are not displayed in offense messages by default. Change
  # behavior by overriding ExtraDetails, or by giving the
  # `-E/--extra-details` option.
  ExtraDetails: true
  # Additional cops that do not reference a style guide rule may be enabled by
  # default. Change behavior by overriding `StyleGuideCopsOnly`, or by giving
  # the `--only-guide-cops` option.
  StyleGuideCopsOnly: false
  # All cops except the ones in disabled.yml are enabled by default. Change
  # this behavior by overriding either `DisabledByDefault` or `EnabledByDefault`.
  # When `DisabledByDefault` is `true`, all cops in the default configuration
  # are disabled, and only cops in user configuration are enabled. This makes
  # cops opt-in instead of opt-out. Note that when `DisabledByDefault` is `true`,
  # cops in user configuration will be enabled even if they don't set the
  # Enabled parameter.
  # When `EnabledByDefault` is `true`, all cops, even those in disabled.yml,
  # are enabled by default.  Cops can still be disabled in user configuration.
  # Note that it is invalid to set both EnabledByDefault and DisabledByDefault
  # to true in the same configuration.
  EnabledByDefault: false
  DisabledByDefault: false
  # Enables the result cache if `true`. Can be overridden by the `--cache` command
  # line option.
  UseCache: true
  # Threshold for how many files can be stored in the result cache before some
  # of the files are automatically removed.
  MaxFilesInCache: 20000
  # The cache will be stored in "rubocop_cache" under this directory. If
  # CacheRootDirectory is ~ (nil), which it is by default, the root will be
  # taken from the environment variable `$XDG_CACHE_HOME` if it is set, or if
  # `$XDG_CACHE_HOME` is not set, it will be `$HOME/.cache/`.
  CacheRootDirectory: /tmp
  # It is possible for a malicious user to know the location of RuboCop's cache
  # directory by looking at CacheRootDirectory, and create a symlink in its
  # place that could cause RuboCop to overwrite unintended files, or read
  # malicious input. If you are certain that your cache location is secure from
  # this kind of attack, and wish to use a symlinked cache location, set this
  # value to "true".
  AllowSymlinksInCacheRootDirectory: true
  # What MRI version of the Ruby interpreter is the inspected code intended to
    # run on? (If there is more than one, set this to the lowest version.)
    # If a value is specified for TargetRubyVersion then it is used.
    # Else if .ruby-version exists and it contains an MRI version it is used.
    # Otherwise we fallback to the oldest officially supported Ruby version (2.1).
  TargetRubyVersion: 2.4
  TargetRailsVersion: 4.2
Bundler/DuplicatedGem:
  Description: Checks for duplicate gem entries in Gemfile.
  Enabled: true
  Include:
  - "**/Gemfile"
  - "**/gems.rb"
Bundler/OrderedGems:
  Description: Gems within groups in the Gemfile should be alphabetically sorted.
  Enabled: true
  Include:
  - "**/Gemfile"
  - "**/gems.rb"
  TreatCommentsAsGroupSeparators: true
Layout/AccessModifierIndentation:
  Description: Check indentation of private/protected visibility modifiers.
  Enabled: true
  EnforcedStyle: indent
  IndentationWidth:
  StyleGuide: "#indent-public-private-protected"
  SupportedStyles:
  - indent
  - outdent
Layout/AlignArray:
  Description: Align the elements of an array literal if they span more than one line.
  Enabled: true
  StyleGuide: "#align-multiline-arrays"
Layout/AlignHash:
  Description: Align the elements of a hash literal if they span more than one line.
  Enabled: true
  EnforcedColonStyle: key
  EnforcedHashRocketStyle: key
  EnforcedLastArgumentHashStyle: always_inspect
  SupportedColonStyles:
  - key
  - separator
  - table
  SupportedHashRocketStyles:
  - key
  - separator
  - table
  SupportedLastArgumentHashStyles:
  - always_ignore
  - always_inspect
  - ignore_explicit
  - ignore_implicit
Layout/AlignParameters:
  Description: Align the parameters of a method call if they span more than one line.
  Enabled: true
  EnforcedStyle: with_fixed_indentation
  IndentationWidth:
  StyleGuide: "#no-double-indent"
  SupportedStyles:
  - with_first_parameter
  - with_fixed_indentation
Layout/BlockEndNewline:
  Description: Put end statement of multiline block on its own line.
  Enabled: true
Layout/CaseIndentation:
  Description: Indentation of when in a case/when/[else/]end.
  Enabled: true
  EnforcedStyle: case
  IndentOneStep: false
  IndentationWidth:
  StyleGuide: "#indent-when-to-case"
  SupportedStyles:
  - case
  - end
Layout/ClosingParenthesisIndentation:
  Description: Checks the indentation of hanging closing parentheses.
  Enabled: true
Layout/CommentIndentation:
  Description: Indentation of comments.
  Enabled: true
Layout/DotPosition:
  Description: Checks the position of the dot in multi-line method calls.
  Enabled: true
  EnforcedStyle: trailing
  StyleGuide: "#consistent-multi-line-chains"
  SupportedStyles:
  - leading
  - trailing
Layout/ElseAlignment:
  Description: Align elses and elsifs correctly.
  Enabled: true
Layout/EmptyLineAfterMagicComment:
  Description: Add an empty line after magic comments to separate them from code.
  Enabled: true
  StyleGuide: "#separate-magic-comments-from-code"
Layout/EmptyLineBetweenDefs:
  AllowAdjacentOneLineDefs: false
  Description: Use empty lines between defs.
  Enabled: true
  NumberOfEmptyLines: 1
  StyleGuide: "#empty-lines-between-methods"
Layout/EmptyLines:
  Description: Don't use several empty lines in a row.
  Enabled: true
  StyleGuide: "#two-or-more-empty-lines"
Layout/EmptyLinesAroundAccessModifier:
  Description: Keep blank lines around access modifiers.
  Enabled: true
  StyleGuide: "#empty-lines-around-access-modifier"
Layout/EmptyLinesAroundBeginBody:
  Description: Keeps track of empty lines around begin-end bodies.
  Enabled: true
  StyleGuide: "#empty-lines-around-bodies"
Layout/EmptyLinesAroundBlockBody:
  Description: Keeps track of empty lines around block bodies.
  Enabled: false
  EnforcedStyle: no_empty_lines
  StyleGuide: "#empty-lines-around-bodies"
  SupportedStyles:
  - empty_lines
  - no_empty_lines
Layout/EmptyLinesAroundClassBody:
  Description: Keeps track of empty lines around class bodies.
  Enabled: false
  EnforcedStyle: no_empty_lines
  StyleGuide: "#empty-lines-around-bodies"
  SupportedStyles:
  - empty_lines
  - empty_lines_except_namespace
  - empty_lines_special
  - no_empty_lines
Layout/EmptyLinesAroundExceptionHandlingKeywords:
  Description: Keeps track of empty lines around exception handling keywords.
  Enabled: true
  StyleGuide: "#empty-lines-around-bodies"
Layout/EmptyLinesAroundMethodBody:
  Description: Keeps track of empty lines around method bodies.
  Enabled: true
  StyleGuide: "#empty-lines-around-bodies"
Layout/EmptyLinesAroundModuleBody:
  Description: Keeps track of empty lines around module bodies.
  Enabled: false
  EnforcedStyle: no_empty_lines
  StyleGuide: "#empty-lines-around-bodies"
  SupportedStyles:
  - empty_lines
  - empty_lines_except_namespace
  - empty_lines_special
  - no_empty_lines
Layout/EndOfLine:
  Description: Use Unix-style line endings.
  Enabled: true
  EnforcedStyle: native
  StyleGuide: "#crlf"
  SupportedStyles:
  - crlf
  - lf
  - native
Layout/ExtraSpacing:
  AllowForAlignment: true
  Description: Do not use unnecessary spacing.
  Enabled: true
  ForceEqualSignAlignment: false
Layout/FirstArrayElementLineBreak:
  Description: Checks for a line break before the first element in a multi-line array.
  Enabled: false
Layout/FirstHashElementLineBreak:
  Description: Checks for a line break before the first element in a multi-line hash.
  Enabled: false
Layout/FirstMethodArgumentLineBreak:
  Description: Checks for a line break before the first argument in a multi-line method
    call.
  Enabled: false
Layout/FirstMethodParameterLineBreak:
  Description: Checks for a line break before the first parameter in a multi-line
    method parameter definition.
  Enabled: false
Layout/FirstParameterIndentation:
  Description: Checks the indentation of the first parameter in a method call.
  Enabled: true
  EnforcedStyle: special_for_inner_method_call_in_parentheses
  IndentationWidth:
  SupportedStyles:
  - consistent
  - special_for_inner_method_call
  - special_for_inner_method_call_in_parentheses
Layout/IndentArray:
  Description: Checks the indentation of the first element in an array literal.
  Enabled: true
  EnforcedStyle: consistent
  IndentationWidth:
  SupportedStyles:
  - align_brackets
  - consistent
  - special_inside_parentheses
Layout/IndentAssignment:
  Description: Checks the indentation of the first line of the right-hand-side of
    a multi-line assignment.
  Enabled: true
  IndentationWidth:
Layout/IndentHash:
  Description: Checks the indentation of the first key in a hash literal.
  Enabled: true
  EnforcedStyle: consistent
  IndentationWidth:
  SupportedStyles:
  - align_braces
  - consistent
  - special_inside_parentheses
Layout/IndentHeredoc:
  Description: This cops checks the indentation of the here document bodies.
  Enabled: true
  EnforcedStyle: auto_detection
  StyleGuide: "#squiggly-heredocs"
  SupportedStyles:
  - active_support
  - auto_detection
  - powerpack
  - squiggly
  - unindent
Layout/IndentationConsistency:
  Description: Keep indentation straight.
  Enabled: true
  EnforcedStyle: rails
  StyleGuide: "#spaces-indentation"
  SupportedStyles:
  - normal
  - rails
Layout/IndentationWidth:
  Description: Use 2 spaces for indentation.
  Enabled: true
  IgnoredPatterns: []
  StyleGuide: "#spaces-indentation"
  Width: 2
Layout/InitialIndentation:
  Description: Checks the indentation of the first non-blank non-comment line in a
    file.
  Enabled: true
Layout/LeadingCommentSpace:
  Description: Comments should start with a space.
  Enabled: true
  StyleGuide: "#hash-space"
Layout/MultilineArrayBraceLayout:
  Description: Checks that the closing brace in an array literal is either on the
    same line as the last array element, or a new line.
  Enabled: true
  EnforcedStyle: symmetrical
  SupportedStyles:
  - new_line
  - same_line
  - symmetrical
Layout/MultilineAssignmentLayout:
  Description: Check for a newline after the assignment operator in multi-line assignments.
  Enabled: false
  EnforcedStyle: new_line
  StyleGuide: "#indent-conditional-assignment"
  SupportedStyles:
  - new_line
  - same_line
  SupportedTypes:
  - block
  - case
  - class
  - if
  - kwbegin
  - module
Layout/MultilineBlockLayout:
  Description: Ensures newlines after multiline block do statements.
  Enabled: true
Layout/MultilineHashBraceLayout:
  Description: Checks that the closing brace in a hash literal is either on the same
    line as the last hash element, or a new line.
  Enabled: true
  EnforcedStyle: symmetrical
  SupportedStyles:
  - new_line
  - same_line
  - symmetrical
Layout/MultilineMethodCallBraceLayout:
  Description: Checks that the closing brace in a method call is either on the same
    line as the last method argument, or a new line.
  Enabled: true
  EnforcedStyle: symmetrical
  SupportedStyles:
  - new_line
  - same_line
  - symmetrical
Layout/MultilineMethodCallIndentation:
  Description: Checks indentation of method calls with the dot operator that span
    more than one line.
  Enabled: true
  EnforcedStyle: indented
  IndentationWidth:
  SupportedStyles:
  - aligned
  - indented
  - indented_relative_to_receiver
Layout/MultilineMethodDefinitionBraceLayout:
  Description: Checks that the closing brace in a method definition is either on the
    same line as the last method parameter, or a new line.
  Enabled: true
  EnforcedStyle: symmetrical
  SupportedStyles:
  - new_line
  - same_line
  - symmetrical
Layout/MultilineOperationIndentation:
  Description: Checks indentation of binary operations that span more than one line.
  Enabled: false
  EnforcedStyle: aligned
  IndentationWidth:
  SupportedStyles:
  - aligned
  - indented
Layout/RescueEnsureAlignment:
  Description: Align rescues and ensures correctly.
  Enabled: true
Layout/SpaceAfterColon:
  Description: Use spaces after colons.
  Enabled: true
  StyleGuide: "#spaces-operators"
Layout/SpaceAfterComma:
  Description: Use spaces after commas.
  Enabled: true
  StyleGuide: "#spaces-operators"
Layout/SpaceAfterMethodName:
  Description: Do not put a space between a method name and the opening parenthesis
    in a method definition.
  Enabled: true
  StyleGuide: "#parens-no-spaces"
Layout/SpaceAfterNot:
  Description: Tracks redundant space after the ! operator.
  Enabled: true
  StyleGuide: "#no-space-bang"
Layout/SpaceAfterSemicolon:
  Description: Use spaces after semicolons.
  Enabled: true
  StyleGuide: "#spaces-operators"
Layout/SpaceAroundBlockParameters:
  Description: Checks the spacing inside and after block parameters pipes.
  Enabled: true
  EnforcedStyleInsidePipes: no_space
  SupportedStylesInsidePipes:
  - no_space
  - space
Layout/SpaceAroundEqualsInParameterDefault:
  Description: Checks that the equals signs in parameter default assignments have
    or don't have surrounding space depending on configuration.
  Enabled: true
  EnforcedStyle: space
  StyleGuide: "#spaces-around-equals"
  SupportedStyles:
  - no_space
  - space
Layout/SpaceAroundKeyword:
  Description: Use a space around keywords if appropriate.
  Enabled: true
Layout/SpaceAroundOperators:
  AllowForAlignment: true
  Description: Use a single space around operators.
  Enabled: true
  StyleGuide: "#spaces-operators"
Layout/SpaceBeforeBlockBraces:
  Description: Checks that the left block brace has or doesn't have space before it.
  Enabled: true
  EnforcedStyle: space
  SupportedStyles:
  - no_space
  - space
Layout/SpaceBeforeComma:
  Description: No spaces before commas.
  Enabled: true
Layout/SpaceBeforeComment:
  Description: Checks for missing space between code and a comment on the same line.
  Enabled: true
Layout/SpaceBeforeFirstArg:
  AllowForAlignment: true
  Description: Checks that exactly one space is used between a method name and the
    first argument for method calls without parentheses.
  Enabled: true
Layout/SpaceBeforeSemicolon:
  Description: No spaces before semicolons.
  Enabled: true
Layout/SpaceInLambdaLiteral:
  Description: Checks for spaces in lambda literals.
  Enabled: true
  EnforcedStyle: require_no_space
  SupportedStyles:
  - require_no_space
  - require_space
Layout/SpaceInsideArrayPercentLiteral:
  Description: No unnecessary additional spaces between elements in %i/%w literals.
  Enabled: true
Layout/SpaceInsideBlockBraces:
  Description: Checks that block braces have or don't have surrounding space. For
    blocks taking parameters, checks that the left brace has or doesn't have trailing
    space.
  Enabled: true
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space
  SpaceBeforeBlockParameters: true
  SupportedStyles:
  - no_space
  - space
  SupportedStylesForEmptyBraces:
  - no_space
  - space
Layout/SpaceInsideBrackets:
  Description: No spaces after [ or before ].
  Enabled: true
  StyleGuide: "#no-spaces-braces"
Layout/SpaceInsideHashLiteralBraces:
  Description: Use spaces inside hash literal braces - or don't.
  Enabled: true
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space
  StyleGuide: "#spaces-operators"
  SupportedStyles:
  - compact
  - no_space
  - space
  SupportedStylesForEmptyBraces:
  - no_space
  - space
Layout/SpaceInsideParens:
  Description: No spaces after ( or before ).
  Enabled: true
  StyleGuide: "#no-spaces-braces"
Layout/SpaceInsidePercentLiteralDelimiters:
  Description: No unnecessary spaces inside delimiters of %i/%w/%x literals.
  Enabled: true
Layout/SpaceInsideRangeLiteral:
  Description: No spaces inside range literals.
  Enabled: true
  StyleGuide: "#no-space-inside-range-literals"
Layout/SpaceInsideStringInterpolation:
  Description: Checks for padding/surrounding spaces inside string interpolation.
  Enabled: true
  EnforcedStyle: no_space
  StyleGuide: "#string-interpolation"
  SupportedStyles:
  - no_space
  - space
Layout/Tab:
  Description: No hard tabs.
  Enabled: true
  StyleGuide: "#spaces-indentation"
Layout/TrailingBlankLines:
  Description: Checks trailing blank lines and final newline.
  Enabled: true
  EnforcedStyle: final_newline
  StyleGuide: "#newline-eof"
  SupportedStyles:
  - final_blank_line
  - final_newline
Layout/TrailingWhitespace:
  Description: Avoid trailing whitespace.
  Enabled: true
  StyleGuide: "#no-trailing-whitespace"
Lint/AmbiguousBlockAssociation:
  Description: Checks for ambiguous block association with method when param passed
    without parentheses.
  Enabled: true
  StyleGuide: "#syntax"
Lint/AmbiguousOperator:
  Description: Checks for ambiguous operators in the first argument of a method invocation
    without parentheses.
  Enabled: true
  StyleGuide: "#method-invocation-parens"
Lint/AmbiguousRegexpLiteral:
  Description: Checks for ambiguous regexp literals in the first argument of a method
    invocation without parentheses.
  Enabled: true
Lint/AssignmentInCondition:
  AllowSafeAssignment: true
  Description: Don't use assignment in conditions.
  Enabled: true
  StyleGuide: "#safe-assignment-in-condition"
Lint/BlockAlignment:
  Description: Align block ends correctly.
  Enabled: true
  EnforcedStyleAlignWith: either
  SupportedStylesAlignWith:
  - either
  - start_of_block
  - start_of_line
Lint/BooleanSymbol:
  Description: Check for `:true` and `:false` symbols.
  Enabled: true
Lint/CircularArgumentReference:
  Description: Default values in optional keyword arguments and optional ordinal arguments
    should not refer back to the name of the argument.
  Enabled: true
Lint/ConditionPosition:
  Description: Checks for condition placed in a confusing position relative to the
    keyword.
  Enabled: true
  StyleGuide: "#same-line-condition"
Lint/Debugger:
  Description: Check for debugger calls.
  Enabled: true
Lint/DefEndAlignment:
  AutoCorrect: false
  Description: Align ends corresponding to defs correctly.
  Enabled: true
  EnforcedStyleAlignWith: start_of_line
  SupportedStylesAlignWith:
  - def
  - start_of_line
Lint/DeprecatedClassMethods:
  Description: Check for deprecated class method calls.
  Enabled: true
Lint/DuplicateCaseCondition:
  Description: Do not repeat values in case conditionals.
  Enabled: true
Lint/DuplicateMethods:
  Description: Check for duplicate method definitions.
  Enabled: true
Lint/DuplicatedKey:
  Description: Check for duplicate keys in hash literals.
  Enabled: true
Lint/EachWithObjectArgument:
  Description: Check for immutable argument given to each_with_object.
  Enabled: true
Lint/ElseLayout:
  Description: Check for odd code arrangement in an else block.
  Enabled: true
Lint/EmptyEnsure:
  AutoCorrect: false
  Description: Checks for empty ensure block.
  Enabled: true
Lint/EmptyExpression:
  Description: Checks for empty expressions.
  Enabled: true
Lint/EmptyInterpolation:
  Description: Checks for empty string interpolation.
  Enabled: true
Lint/EmptyWhen:
  Description: Checks for `when` branches with empty bodies.
  Enabled: true
Lint/EndAlignment:
  AutoCorrect: false
  Description: Align ends correctly.
  Enabled: true
  EnforcedStyleAlignWith: keyword
  SupportedStylesAlignWith:
  - keyword
  - start_of_line
  - variable
Lint/EndInMethod:
  Description: END blocks should not be placed inside method definitions.
  Enabled: true
Lint/EnsureReturn:
  Description: Do not use return in an ensure block.
  Enabled: true
  StyleGuide: "#no-return-ensure"
Lint/FloatOutOfRange:
  Description: Catches floating-point literals too large or small for Ruby to represent.
  Enabled: true
Lint/FormatParameterMismatch:
  Description: The number of parameters to format/sprint must match the fields.
  Enabled: true
Lint/HandleExceptions:
  Description: Don't suppress exception.
  Enabled: true
  StyleGuide: "#dont-hide-exceptions"
Lint/ImplicitStringConcatenation:
  Description: Checks for adjacent string literals on the same line, which could better
    be represented as a single string literal.
  Enabled: true
Lint/IneffectiveAccessModifier:
  Description: Checks for attempts to use `private` or `protected` to set the visibility
    of a class method, which does not work.
  Enabled: true
Lint/InheritException:
  Description: Avoid inheriting from the `Exception` class.
  Enabled: true
  EnforcedStyle: runtime_error
  SupportedStyles:
  - runtime_error
  - standard_error
Lint/InvalidCharacterLiteral:
  Description: Checks for invalid character literals with a non-escaped whitespace
    character.
  Enabled: true
Lint/LiteralInCondition:
  Description: Checks of literals used in conditions.
  Enabled: true
Lint/LiteralInInterpolation:
  Description: Checks for literals used in interpolation.
  Enabled: false
Lint/Loop:
  Description: Use Kernel#loop with break rather than begin/end/until or begin/end/while
    for post-loop tests.
  Enabled: true
  StyleGuide: "#loop-with-break"
Lint/MultipleCompare:
  Description: Use `&&` operator to compare multiple value.
  Enabled: true
Lint/NestedMethodDefinition:
  Description: Do not use nested method definitions.
  Enabled: true
  StyleGuide: "#no-nested-methods"
Lint/NextWithoutAccumulator:
  Description: Do not omit the accumulator when calling `next` in a `reduce`/`inject`
    block.
  Enabled: true
Lint/NonLocalExitFromIterator:
  Description: Do not use return in iterator to cause non-local exit.
  Enabled: true
Lint/ParenthesesAsGroupedExpression:
  Description: Checks for method calls with a space before the opening parenthesis.
  Enabled: true
  StyleGuide: "#parens-no-spaces"
Lint/PercentStringArray:
  Description: Checks for unwanted commas and quotes in %w/%W literals.
  Enabled: true
Lint/PercentSymbolArray:
  Description: Checks for unwanted commas and colons in %i/%I literals.
  Enabled: true
Lint/RandOne:
  Description: Checks for `rand(1)` calls. Such calls always return `0` and most likely
    a mistake.
  Enabled: true
Lint/RequireParentheses:
  Description: Use parentheses in the method call to avoid confusion about precedence.
  Enabled: true
Lint/RescueException:
  Description: Avoid rescuing the Exception class.
  Enabled: true
  StyleGuide: "#no-blind-rescues"
Lint/RescueType:
  Description: Avoid rescuing from non constants that could result in a `TypeError`.
  Enabled: true
Lint/RescueWithoutErrorClass:
  Description: Avoid rescuing without specifying an error class.
  Enabled: true
  StyleGuide: "#no-blind-rescues"
Lint/ReturnInVoidContext:
  Description: Checks for return in void context.
  Enabled: true
Lint/SafeNavigationChain:
  Description: Do not chain ordinary method call after safe navigation operator.
  Enabled: true
  Whitelist:
  - blank?
  - presence
  - present?
  - try
Lint/ScriptPermission:
  Description: Grant script file execute permission.
  Enabled: true
Lint/ShadowedException:
  Description: Avoid rescuing a higher level exception before a lower level exception.
  Enabled: true
Lint/ShadowingOuterLocalVariable:
  Description: Do not use the same name as outer local variable for block arguments
    or block local variables.
  Enabled: true
Lint/StringConversionInInterpolation:
  Description: Checks for Object#to_s usage in string interpolation.
  Enabled: true
  StyleGuide: "#no-to-s"
Lint/UnderscorePrefixedVariableName:
  Description: Do not use prefix `_` for a variable that is used.
  Enabled: true
Lint/UnifiedInteger:
  Description: Use Integer instead of Fixnum or Bignum
  Enabled: false
Lint/UnneededDisable:
  Description: 'Checks for rubocop:disable comments that can be removed. Note: this
    cop is not disabled when disabling all cops. It must be explicitly disabled.'
  Enabled: true
Lint/UnneededSplatExpansion:
  Description: Checks for splat unnecessarily being called on literals
  Enabled: false
Lint/UnreachableCode:
  Description: Unreachable code.
  Enabled: true
Lint/UnusedBlockArgument:
  AllowUnusedKeywordArguments: false
  Description: Checks for unused block arguments.
  Enabled: true
  IgnoreEmptyBlocks: true
  StyleGuide: "#underscore-unused-vars"
Lint/UnusedMethodArgument:
  AllowUnusedKeywordArguments: false
  Description: Checks for unused method arguments.
  Enabled: true
  IgnoreEmptyMethods: true
  StyleGuide: "#underscore-unused-vars"
Lint/UselessAccessModifier:
  ContextCreatingMethods: []
  Description: Checks for useless access modifiers.
  Enabled: true
  MethodCreatingMethods: []
Lint/UselessAssignment:
  Description: Checks for useless assignment to a local variable.
  Enabled: true
  StyleGuide: "#underscore-unused-vars"
Lint/UselessComparison:
  Description: Checks for comparison of something with itself.
  Enabled: true
Lint/UselessElseWithoutRescue:
  Description: Checks for useless `else` in `begin..end` without `rescue`.
  Enabled: true
Lint/UselessSetterCall:
  Description: Checks for useless setter call to a local variable.
  Enabled: true
Lint/Void:
  Description: Possible use of operator/literal/variable in void context.
  Enabled: true
Metrics/AbcSize:
  Description: A calculated magnitude based on number of assignments, branches, and
    conditions.
  Enabled: true
  Max: 20
  Reference: http://c2.com/cgi/wiki?AbcMetric
Metrics/BlockLength:
  CountComments: false
  Description: Avoid long blocks with many lines.
  Enabled: false
  ExcludedMethods: []
  Max: 25
Metrics/BlockNesting:
  CountBlocks: false
  Description: Avoid excessive block nesting
  Enabled: true
  Max: 3
  StyleGuide: "#three-is-the-number-thou-shalt-count"
Metrics/ClassLength:
  CountComments: false
  Description: Avoid classes longer than 100 lines of code.
  Enabled: false
  Max: 100
Metrics/CyclomaticComplexity:
  Description: A complexity metric that is strongly correlated to the number of test
    cases needed to validate a method.
  Enabled: true
  Max: 6
Metrics/LineLength:
  AllowHeredoc: true
  AllowURI: true
  Description: Limit lines to 80 characters.
  Enabled: true
  Exclude:
    - config/routes.rb
  IgnoreCopDirectives: false
  IgnoredPatterns: []
  Max: 120
  StyleGuide: "#80-character-limits"
  URISchemes:
  - http
  - https
Metrics/MethodLength:
  CountComments: false
  Description: Avoid methods longer than 10 lines of code.
  Enabled: true
  Max: 20
  StyleGuide: "#short-methods"
Metrics/ModuleLength:
  CountComments: false
  Description: Avoid modules longer than 100 lines of code.
  Enabled: false
  Max: 100
Metrics/ParameterLists:
  CountKeywordArgs: true
  Description: Avoid parameter lists longer than three or four parameters.
  Enabled: true
  Max: 5
  StyleGuide: "#too-many-params"
Metrics/PerceivedComplexity:
  Description: A complexity metric geared towards measuring complexity for a human
    reader.
  Enabled: true
  Max: 10
Naming/AccessorMethodName:
  Description: Check the naming of accessor methods for get_/set_.
  Enabled: true
  StyleGuide: "#accessor_mutator_method_names"
Naming/AsciiIdentifiers:
  Description: Use only ascii symbols in identifiers.
  Enabled: true
  StyleGuide: "#english-identifiers"
Naming/BinaryOperatorParameterName:
  Description: When defining binary operators, name the argument other.
  Enabled: true
  StyleGuide: "#other-arg"
Naming/ClassAndModuleCamelCase:
  Description: Use CamelCase for classes and modules.
  Enabled: true
  StyleGuide: "#camelcase-classes"
Naming/ConstantName:
  Description: Constants should use SCREAMING_SNAKE_CASE.
  Enabled: true
  StyleGuide: "#screaming-snake-case"
Naming/FileName:
  AllowedAcronyms:
  - ACL
  - API
  - ASCII
  - CLI
  - CPU
  - CSS
  - DNS
  - DSL
  - EOF
  - GUID
  - HTML
  - HTTP
  - HTTPS
  - ID
  - IP
  - JSON
  - LHS
  - QPS
  - RAM
  - RHS
  - RPC
  - SLA
  - SMTP
  - SQL
  - SSH
  - TCP
  - TLS
  - TTL
  - UDP
  - UI
  - UID
  - URI
  - URL
  - UTF8
  - UUID
  - VM
  - XML
  - XMPP
  - XSRF
  - XSS
  Description: Use snake_case for source file names.
  Enabled: true
  Exclude: []
  ExpectMatchingDefinition: false
  IgnoreExecutableScripts: true
  Regex:
  StyleGuide: "#snake-case-files"
Naming/HeredocDelimiterCase:
  Description: Use configured case for heredoc delimiters.
  Enabled: true
  EnforcedStyle: uppercase
  StyleGuide: "#heredoc-delimiters"
  SupportedStyles:
  - lowercase
  - uppercase
Naming/HeredocDelimiterNaming:
  Blacklist:
  - !ruby/regexp /EO[A-Z]{1}/
  - END
  Description: Use descriptive heredoc delimiters.
  Enabled: true
  StyleGuide: "#heredoc-delimiters"
Naming/MethodName:
  Description: Use the configured style when naming methods.
  Enabled: true
  EnforcedStyle: snake_case
  StyleGuide: "#snake-case-symbols-methods-vars"
  SupportedStyles:
  - camelCase
  - snake_case
Naming/PredicateName:
  Description: Check the names of predicate methods.
  Enabled: true
  Exclude:
  - spec/**/*
  NamePrefix:
  - has_
  - have_
  - is_
  NamePrefixBlacklist:
  - has_
  - have_
  - is_
  NameWhitelist:
  - is_a?
  StyleGuide: "#bool-methods-qmark"
Naming/VariableName:
  Description: Use the configured style when naming variables.
  Enabled: true
  EnforcedStyle: snake_case
  StyleGuide: "#snake-case-symbols-methods-vars"
  SupportedStyles:
  - camelCase
  - snake_case
Naming/VariableNumber:
  Description: Use the configured style when numbering variables.
  Enabled: true
  EnforcedStyle: snake_case
  SupportedStyles:
  - non_integer
  - normalcase
  - snake_case
Performance/Caller:
  Description: Use `caller(n..n)` instead of `caller`.
  Enabled: true
Performance/CaseWhenSplat:
  Description: Place `when` conditions that use splat at the end of the list of `when`
    branches.
  Enabled: true
Performance/Casecmp:
  Description: Use `casecmp` rather than `downcase ==`, `upcase ==`, `== downcase`,
    or `== upcase`..
  Enabled: true
  Reference: https://github.com/JuanitoFatas/fast-ruby#stringcasecmp-vs-stringdowncase---code
Performance/CompareWithBlock:
  Description: Use `sort_by(&:foo)` instead of `sort_by { |a, b| a.foo <=> b.foo }`.
  Enabled: true
Performance/Count:
  Description: Use `count` instead of `select...size`, `reject...size`, `select...count`,
    `reject...count`, `select...length`, and `reject...length`.
  Enabled: true
  SafeMode: true
Performance/Detect:
  Description: Use `detect` instead of `select.first`, `find_all.first`, `select.last`,
    and `find_all.last`.
  Enabled: true
  Reference: https://github.com/JuanitoFatas/fast-ruby#enumerabledetect-vs-enumerableselectfirst-code
  SafeMode: true
Performance/DoubleStartEndWith:
  Description: Use `str.{start,end}_with?(x, ..., y, ...)` instead of `str.{start,end}_with?(x,
    ...) || str.{start,end}_with?(y, ...)`.
  Enabled: true
  IncludeActiveSupportAliases: false
Performance/EndWith:
  AutoCorrect: false
  Description: Use `end_with?` instead of a regex match anchored to the end of a string.
  Enabled: true
  Reference: https://github.com/JuanitoFatas/fast-ruby#stringmatch-vs-stringstart_withstringend_with-code-start-code-end
Performance/FixedSize:
  Description: Do not compute the size of statically sized objects except in constants
  Enabled: true
Performance/FlatMap:
  Description: Use `Enumerable#flat_map` instead of `Enumerable#map...Array#flatten(1)`
    or `Enumberable#collect..Array#flatten(1)`
  Enabled: true
  EnabledForFlattenWithoutParams: false
  Reference: https://github.com/JuanitoFatas/fast-ruby#enumerablemaparrayflatten-vs-enumerableflat_map-code
Performance/HashEachMethods:
  AutoCorrect: false
  Description: Use `Hash#each_key` and `Hash#each_value` instead of `Hash#keys.each`
    and `Hash#values.each`.
  Enabled: true
  StyleGuide: "#hash-each"
Performance/LstripRstrip:
  Description: Use `strip` instead of `lstrip.rstrip`.
  Enabled: true
Performance/RangeInclude:
  Description: Use `Range#cover?` instead of `Range#include?`.
  Enabled: true
  Reference: https://github.com/JuanitoFatas/fast-ruby#cover-vs-include-code
Performance/RedundantBlockCall:
  Description: Use `yield` instead of `block.call`.
  Enabled: true
  Reference: https://github.com/JuanitoFatas/fast-ruby#proccall-vs-yield-code
Performance/RedundantMatch:
  Description: Use `=~` instead of `String#match` or `Regexp#match` in a context where
    the returned `MatchData` is not needed.
  Enabled: true
Performance/RedundantMerge:
  Description: Use Hash#[]=, rather than Hash#merge! with a single key-value pair.
  Enabled: true
  MaxKeyValuePairs: 2
  Reference: https://github.com/JuanitoFatas/fast-ruby#hashmerge-vs-hash-code
Performance/RedundantSortBy:
  Description: Use `sort` instead of `sort_by { |x| x }`.
  Enabled: true
Performance/RegexpMatch:
  Description: Use `match?` instead of `Regexp#match`, `String#match`, `Symbol#match`,
    `Regexp#===`, or `=~` when `MatchData` is not used.
  Enabled: true
Performance/ReverseEach:
  Description: Use `reverse_each` instead of `reverse.each`.
  Enabled: true
  Reference: https://github.com/JuanitoFatas/fast-ruby#enumerablereverseeach-vs-enumerablereverse_each-code
Performance/Sample:
  Description: Use `sample` instead of `shuffle.first`, `shuffle.last`, and `shuffle[Integer]`.
  Enabled: true
  Reference: https://github.com/JuanitoFatas/fast-ruby#arrayshufflefirst-vs-arraysample-code
Performance/Size:
  Description: Use `size` instead of `count` for counting the number of elements in
    `Array` and `Hash`.
  Enabled: true
  Reference: https://github.com/JuanitoFatas/fast-ruby#arraycount-vs-arraysize-code
Performance/StartWith:
  AutoCorrect: false
  Description: Use `start_with?` instead of a regex match anchored to the beginning
    of a string.
  Enabled: true
  Reference: https://github.com/JuanitoFatas/fast-ruby#stringmatch-vs-stringstart_withstringend_with-code-start-code-end
Performance/StringReplacement:
  Description: Use `tr` instead of `gsub` when you are replacing the same number of
    characters. Use `delete` instead of `gsub` when you are deleting characters.
  Enabled: true
  Reference: https://github.com/JuanitoFatas/fast-ruby#stringgsub-vs-stringtr-code
Performance/TimesMap:
  Description: Checks for .times.map calls.
  Enabled: true
Performance/UnfreezeString:
  Description: Use unary plus to get an unfrozen string literal.
  Enabled: true
Rails:
  Enabled: true
Rails/ActionFilter:
  Description: Enforces consistent use of action filter methods.
  Enabled: true
  EnforcedStyle: action
  Include:
  - app/controllers/**/*.rb
  SupportedStyles:
  - action
  - filter
Rails/ActiveSupportAliases:
  Description: 'Avoid ActiveSupport aliases of standard ruby methods: `String#starts_with?`,
    `String#ends_with?`, `Array#append`, `Array#prepend`.'
  Enabled: true
Rails/ApplicationJob:
  Description: Check that jobs subclass ApplicationJob.
  Enabled: true
Rails/ApplicationRecord:
  Description: Check that models subclass ApplicationRecord.
  Enabled: true
Rails/Blank:
  Description: Enforce using `blank?` and `present?`.
  Enabled: true
  NilOrEmpty: true
  NotPresent: true
  UnlessPresent: true
Rails/Date:
  Description: Checks the correct usage of date aware methods, such as Date.today,
    Date.current etc.
  Enabled: true
  EnforcedStyle: flexible
  SupportedStyles:
  - flexible
  - strict
Rails/Delegate:
  Description: Prefer delegate method for delegations.
  Enabled: true
  EnforceForPrefixed: true
Rails/DelegateAllowBlank:
  Description: Do not use allow_blank as an option to delegate.
  Enabled: true
Rails/DynamicFindBy:
  Description: Use `find_by` instead of dynamic `find_by_*`.
  Enabled: true
  StyleGuide: https://github.com/bbatsov/rails-style-guide#find_by
  Whitelist:
  - find_by_sql
Rails/EnumUniqueness:
  Description: Avoid duplicate integers in hash-syntax `enum` declaration.
  Enabled: true
  Include:
  - app/models/**/*.rb
Rails/Exit:
  Description: Favor `fail`, `break`, `return`, etc. over `exit` in application or
    library code outside of Rake files to avoid exits during unit testing or running
    in production.
  Enabled: true
  Exclude:
  - lib/**/*.rake
  Include:
  - app/**/*.rb
  - config/**/*.rb
  - lib/**/*.rb
Rails/FilePath:
  Description: Use `Rails.root.join` for file path joining.
  Enabled: true
Rails/FindBy:
  Description: Prefer find_by over where.first.
  Enabled: true
  Include:
  - app/models/**/*.rb
  StyleGuide: https://github.com/bbatsov/rails-style-guide#find_by
Rails/FindEach:
  Description: Prefer all.find_each over all.find.
  Enabled: true
  Include:
  - app/models/**/*.rb
  StyleGuide: https://github.com/bbatsov/rails-style-guide#find-each
Rails/HasAndBelongsToMany:
  Description: Prefer has_many :through to has_and_belongs_to_many.
  Enabled: true
  Include:
  - app/models/**/*.rb
  StyleGuide: https://github.com/bbatsov/rails-style-guide#has-many-through
Rails/HasManyOrHasOneDependent:
  Description: Define the dependent option to the has_many and has_one associations.
  Enabled: true
  Include:
  - app/models/**/*.rb
  StyleGuide: https://github.com/bbatsov/rails-style-guide#has_many-has_one-dependent-option
Rails/HttpPositionalArguments:
  Description: Use keyword arguments instead of positional arguments in http method
    calls.
  Enabled: false
  Include:
  - spec/**/*
  - test/**/*
Rails/NotNullColumn:
  Description: Do not add a NOT NULL column without a default value
  Enabled: true
  Include:
  - db/migrate/*.rb
Rails/Output:
  Description: Checks for calls to puts, print, etc.
  Enabled: true
  Include:
  - app/**/*.rb
  - config/**/*.rb
  - db/**/*.rb
  - lib/**/*.rb
Rails/OutputSafety:
  Description: The use of `html_safe` or `raw` may be a security risk.
  Enabled: true
Rails/PluralizationGrammar:
  Description: Checks for incorrect grammar when using methods like `3.day.ago`.
  Enabled: true
Rails/Present:
  Description: Enforce using `blank?` and `present?`.
  Enabled: true
  NotBlank: true
  NotNilAndNotEmpty: true
  UnlessBlank: true
Rails/ReadWriteAttribute:
  Description: Checks for read_attribute(:attr) and write_attribute(:attr, val).
  Enabled: true
  Include:
  - app/models/**/*.rb
  StyleGuide: https://github.com/bbatsov/rails-style-guide#read-attribute
Rails/RelativeDateConstant:
  Description: Do not assign relative date to constants.
  Enabled: true
Rails/RequestReferer:
  Description: Use consistent syntax for request.referer.
  Enabled: true
  EnforcedStyle: referer
  SupportedStyles:
  - referer
  - referrer
Rails/ReversibleMigration:
  Description: Checks whether the change method of the migration file is reversible.
  Enabled: true
  Include:
  - db/migrate/*.rb
  Reference: http://api.rubyonrails.org/classes/ActiveRecord/Migration/CommandRecorder.html
  StyleGuide: https://github.com/bbatsov/rails-style-guide#reversible-migration
Rails/SafeNavigation:
  ConvertTry: false
  Description: Use Ruby's safe navigation operator (`&.`) instead of `try!`
  Enabled: false
Rails/SaveBang:
  Description: Identifies possible cases where Active Record save! or related should
    be used.
  Enabled: false
  StyleGuide: https://github.com/bbatsov/rails-style-guide#save-bang
Rails/ScopeArgs:
  Description: Checks the arguments of ActiveRecord scopes.
  Enabled: true
  Include:
  - app/models/**/*.rb
Rails/SkipsModelValidations:
  Blacklist:
  - decrement!
  - decrement_counter
  - increment!
  - increment_counter
  - toggle!
  - touch
  - update_all
  - update_attribute
  - update_column
  - update_columns
  - update_counters
  Description: Use methods that skips model validations with caution. See reference
    for more information.
  Enabled: true
  Reference: http://guides.rubyonrails.org/active_record_validations.html#skipping-validations
Rails/TimeZone:
  Description: Checks the correct usage of time zone aware methods.
  Enabled: true
  EnforcedStyle: flexible
  Reference: http://danilenko.org/2012/7/6/rails_timezones
  StyleGuide: https://github.com/bbatsov/rails-style-guide#time
  SupportedStyles:
  - flexible
  - strict
Rails/UniqBeforePluck:
  AutoCorrect: false
  Description: Prefer the use of uniq or distinct before pluck.
  Enabled: true
  EnforcedStyle: conservative
  SupportedStyles:
  - aggressive
  - conservative
Rails/Validation:
  Description: Use validates :attribute, hash of validations.
  Enabled: true
  Include:
  - app/models/**/*.rb
Security/Eval:
  Description: The use of eval represents a serious security risk.
  Enabled: true
Security/JSONLoad:
  AutoCorrect: false
  Description: Prefer usage of `JSON.parse` over `JSON.load` due to potential security
    issues. See reference for more information.
  Enabled: true
  Reference: http://ruby-doc.org/stdlib-2.3.0/libdoc/json/rdoc/JSON.html#method-i-load
Security/MarshalLoad:
  Description: Avoid using of `Marshal.load` or `Marshal.restore` due to potential
    security issues. See reference for more information.
  Enabled: true
  Reference: http://ruby-doc.org/core-2.3.3/Marshal.html#module-Marshal-label-Security+considerations
Security/YAMLLoad:
  Description: Prefer usage of `YAML.safe_load` over `YAML.load` due to potential
    security issues. See reference for more information.
  Enabled: true
  Reference: https://ruby-doc.org/stdlib-2.3.3/libdoc/yaml/rdoc/YAML.html#module-YAML-label-Security
Style/Alias:
  Description: Use alias instead of alias_method.
  Enabled: true
  EnforcedStyle: prefer_alias_method
  StyleGuide: "#alias-method"
  SupportedStyles:
  - prefer_alias
  - prefer_alias_method
Style/AndOr:
  Description: Use &&/|| instead of and/or.
  Enabled: true
  EnforcedStyle: always
  StyleGuide: "#no-and-or-or"
  SupportedStyles:
  - always
  - conditionals
Style/ArrayJoin:
  Description: Use Array#join instead of Array#*.
  Enabled: true
  StyleGuide: "#array-join"
Style/AsciiComments:
  Description: Use only ascii symbols in comments.
  Enabled: false
  StyleGuide: "#english-comments"
Style/Attr:
  Description: Checks for uses of Module#attr.
  Enabled: true
  StyleGuide: "#attr"
Style/AutoResourceCleanup:
  Description: Suggests the usage of an auto resource cleanup version of a method
    (if available).
  Enabled: false
Style/BarePercentLiterals:
  Description: Checks if usage of %() or %Q() matches configuration.
  Enabled: true
  EnforcedStyle: bare_percent
  StyleGuide: "#percent-q-shorthand"
  SupportedStyles:
  - bare_percent
  - percent_q
Style/BeginBlock:
  Description: Avoid the use of BEGIN blocks.
  Enabled: true
  StyleGuide: "#no-BEGIN-blocks"
Style/BlockComments:
  Description: Do not use block comments.
  Enabled: true
  StyleGuide: "#no-block-comments"
Style/BlockDelimiters:
  Description: Avoid using {...} for multi-line blocks (multiline chaining is always
    ugly). Prefer {...} over do...end for single-line blocks.
  Enabled: false
  EnforcedStyle: line_count_based
  FunctionalMethods:
  - let
  - let!
  - subject
  - watch
  IgnoredMethods:
  - it
  - lambda
  - proc
  ProceduralMethods:
  - benchmark
  - bm
  - bmbm
  - create
  - each_with_object
  - measure
  - new
  - realtime
  - tap
  - with_object
  StyleGuide: "#single-line-blocks"
  SupportedStyles:
  - braces_for_chaining
  - line_count_based
  - semantic
Style/BracesAroundHashParameters:
  Description: Enforce braces style around hash parameters.
  Enabled: false
  EnforcedStyle: context_dependent
  SupportedStyles:
  - braces
  - context_dependent
  - no_braces
Style/CaseEquality:
  Description: Avoid explicit use of the case equality operator(===).
  Enabled: true
  StyleGuide: "#no-case-equality"
Style/CharacterLiteral:
  Description: Checks for uses of character literals.
  Enabled: true
  StyleGuide: "#no-character-literals"
Style/ClassAndModuleChildren:
  Description: Checks style of children classes and modules.
  Enabled: true
  EnforcedStyle: nested
  StyleGuide: "#namespace-definition"
  SupportedStyles:
  - compact
  - nested
Style/ClassCheck:
  Description: Enforces consistent use of `Object#is_a?` or `Object#kind_of?`.
  Enabled: true
  EnforcedStyle: is_a?
  SupportedStyles:
  - is_a?
  - kind_of?
Style/ClassMethods:
  Description: Use self when defining module/class methods.
  Enabled: true
  StyleGuide: "#def-self-class-methods"
Style/ClassVars:
  Description: Avoid the use of class variables.
  Enabled: true
  StyleGuide: "#no-class-vars"
Style/CollectionMethods:
  Description: Preferred collection methods.
  Enabled: true
  PreferredMethods:
    collect!: map!
    collect: map
    detect: find
    find_all: select
    inject: reduce
  StyleGuide: "#map-find-select-reduce-size"
Style/ColonMethodCall:
  Description: 'Do not use :: for method call.'
  Enabled: true
  StyleGuide: "#double-colons"
Style/CommandLiteral:
  AllowInnerBackticks: false
  Description: Use `` or %x around command literals.
  Enabled: true
  EnforcedStyle: mixed
  StyleGuide: "#percent-x"
  SupportedStyles:
  - backticks
  - mixed
  - percent_x
Style/CommentAnnotation:
  Description: Checks formatting of special comments (TODO, FIXME, OPTIMIZE, HACK,
    REVIEW).
  Enabled: true
  Keywords:
  - FIXME
  - HACK
  - OPTIMIZE
  - REVIEW
  - TODO
  StyleGuide: "#annotate-keywords"
Style/ConditionalAssignment:
  Description: Use the return value of `if` and `case` statements for assignment to
    a variable and variable comparison instead of assigning that variable inside of
    each branch.
  Enabled: true
  EnforcedStyle: assign_to_condition
  IncludeTernaryExpressions: true
  SingleLineConditionsOnly: true
  SupportedStyles:
  - assign_inside_condition
  - assign_to_condition
Style/Copyright:
  AutocorrectNotice: ''
  Description: Include a copyright notice in each file before any code.
  Enabled: false
  Notice: "^Copyright (\\(c\\) )?2[0-9]{3} .+"
Style/DefWithParentheses:
  Description: Use def with parentheses when there are arguments.
  Enabled: true
  StyleGuide: "#method-parens"
Style/Dir:
  Description: Use the `__dir__` method to retrieve the canonicalized absolute path
    to the current file.
  Enabled: true
Style/Documentation:
  Description: Document classes and non-namespace modules.
  Enabled: false
  Exclude:
  - spec/**/*
  - test/**/*
Style/DocumentationMethod:
  Description: Public methods.
  Enabled: false
  Exclude:
  - spec/**/*
  - test/**/*
  RequireForNonPublicMethods: false
Style/DoubleNegation:
  Description: Checks for uses of double negation (!!).
  Enabled: true
  StyleGuide: "#no-bang-bang"
Style/EachForSimpleLoop:
  Description: Use `Integer#times` for a simple loop which iterates a fixed number
    of times.
  Enabled: true
Style/EachWithObject:
  Description: Prefer `each_with_object` over `inject` or `reduce`.
  Enabled: true
Style/EmptyCaseCondition:
  Description: Avoid empty condition in case statements.
  Enabled: true
Style/EmptyElse:
  Description: Avoid empty else-clauses.
  Enabled: true
  EnforcedStyle: both
  SupportedStyles:
  - both
  - empty
  - nil
Style/EmptyLiteral:
  Description: Prefer literals to Array.new/Hash.new/String.new.
  Enabled: true
  StyleGuide: "#literal-array-hash"
Style/EmptyMethod:
  Description: Checks the formatting of empty method definitions.
  Enabled: true
  EnforcedStyle: compact
  StyleGuide: "#no-single-line-methods"
  SupportedStyles:
  - compact
  - expanded
Style/Encoding:
  AutoCorrectEncodingComment: "# encoding: utf-8"
  Description: Use UTF-8 as the source file encoding.
  Enabled: false
  EnforcedStyle: when_needed
  StyleGuide: "#utf-8"
  SupportedStyles:
  - always
  - never
  - when_needed
Style/EndBlock:
  Description: Avoid the use of END blocks.
  Enabled: true
  StyleGuide: "#no-END-blocks"
Style/EvenOdd:
  Description: Favor the use of Integer#even? && Integer#odd?
  Enabled: true
  StyleGuide: "#predicate-methods"
Style/FlipFlop:
  Description: Checks for flip flops
  Enabled: true
  StyleGuide: "#no-flip-flops"
Style/For:
  Description: Checks use of for or each in multiline loops.
  Enabled: true
  EnforcedStyle: each
  StyleGuide: "#no-for-loops"
  SupportedStyles:
  - each
  - for
Style/FormatString:
  Description: Enforce the use of Kernel#sprintf, Kernel#format or String#%.
  Enabled: true
  EnforcedStyle: format
  StyleGuide: "#sprintf"
  SupportedStyles:
  - format
  - percent
  - sprintf
Style/FormatStringToken:
  Description: Use a consistent style for format string tokens.
  Enabled: true
  EnforcedStyle: annotated
  SupportedStyles:
  - annotated
  - template
Style/FrozenStringLiteralComment:
  Description: Add the frozen_string_literal comment to the top of files to help transition
    from Ruby 2.3.0 to Ruby 3.0.
  Enabled: false
  EnforcedStyle: when_needed
  SupportedStyles:
  - always
  - never
  - when_needed
Style/GlobalVars:
  AllowedVariables:
  - "$redis"
  - "$rollout"
  - "$statsd"
  Description: Do not introduce global variables.
  Enabled: true
  Reference: http://www.zenspider.com/Languages/Ruby/QuickRef.html
  StyleGuide: "#instance-vars"
Style/GuardClause:
  Description: Check for conditionals that can be replaced with guard clauses
  Enabled: true
  MinBodyLength: 1
  StyleGuide: "#no-nested-conditionals"
Style/HashSyntax:
  Description: 'Prefer Ruby 1.9 hash syntax { a: 1, b: 2 } over 1.8 syntax { :a =>
    1, :b => 2 }.'
  Enabled: true
  EnforcedStyle: no_mixed_keys
  PreferHashRocketsForNonAlnumEndingSymbols: false
  StyleGuide: "#hash-literals"
  SupportedStyles:
  - hash_rockets
  - no_mixed_keys
  - ruby19
  - ruby19_no_mixed_keys
  UseHashRocketsWithSymbolValues: false
Style/IdenticalConditionalBranches:
  Description: Checks that conditional statements do not have an identical line at
    the end of each branch, which can validly be moved out of the conditional.
  Enabled: true
Style/IfInsideElse:
  Description: Finds if nodes inside else, which can be converted to elsif.
  Enabled: true
Style/IfUnlessModifier:
  Description: Favor modifier if/unless usage when you have a single-line body.
  Enabled: true
  MaxLineLength: 80
  StyleGuide: "#if-as-a-modifier"
Style/IfUnlessModifierOfIfUnless:
  Description: Avoid modifier if/unless usage on conditionals.
  Enabled: true
Style/IfWithSemicolon:
  Description: Do not use if x; .... Use the ternary operator instead.
  Enabled: true
  StyleGuide: "#no-semicolon-ifs"
Style/ImplicitRuntimeError:
  Description: Use `raise` or `fail` with an explicit exception class and message,
    rather than just a message.
  Enabled: false
Style/InfiniteLoop:
  Description: Use Kernel#loop for infinite loops.
  Enabled: true
  StyleGuide: "#infinite-loop"
Style/InlineComment:
  Description: Avoid trailing inline comments.
  Enabled: false
Style/InverseMethods:
  Description: Use the inverse method instead of `!.method` if an inverse method is
    defined.
  Enabled: true
  InverseBlocks:
    ":select!": ":reject!"
    ":select": ":reject"
  InverseMethods:
    ":<": ":>="
    ":==": ":!="
    ":=~": ":!~"
    ":>": ":<="
    ":any?": ":none?"
    ":even?": ":odd?"
Style/Lambda:
  Description: Use the new lambda literal syntax for single-line blocks.
  Enabled: false
  EnforcedStyle: line_count_dependent
  StyleGuide: "#lambda-multi-line"
  SupportedStyles:
  - lambda
  - line_count_dependent
  - literal
Style/LambdaCall:
  Description: Use lambda.call(...) instead of lambda.(...).
  Enabled: true
  EnforcedStyle: call
  StyleGuide: "#proc-call"
  SupportedStyles:
  - braces
  - call
Style/LineEndConcatenation:
  Description: Use \ instead of + or << to concatenate two string literals at line
    end.
  Enabled: true
Style/MethodCallWithArgsParentheses:
  Description: Use parentheses for method calls with arguments.
  Enabled: false
  IgnoreMacros: true
  IgnoredMethods: []
  StyleGuide: "#method-invocation-parens"
Style/MethodCallWithoutArgsParentheses:
  Description: Do not use parentheses for method calls with no arguments.
  Enabled: true
  StyleGuide: "#method-invocation-parens"
Style/MethodCalledOnDoEndBlock:
  Description: Avoid chaining a method call on a do...end block.
  Enabled: true
  StyleGuide: "#single-line-blocks"
Style/MethodDefParentheses:
  Description: Checks if the method definitions have or don't have parentheses.
  Enabled: true
  EnforcedStyle: require_parentheses
  StyleGuide: "#method-parens"
  SupportedStyles:
  - require_no_parentheses
  - require_no_parentheses_except_multiline
  - require_parentheses
Style/MethodMissing:
  Description: Avoid using `method_missing`.
  Enabled: false
  StyleGuide: "#no-method-missing"
Style/MissingElse:
  Description: Require if/case expressions to have an else branches. If enabled, it
    is recommended that Style/UnlessElse and Style/EmptyElse be enabled. This will
    conflict with Style/EmptyElse if Style/EmptyElse is configured to style "both"
  Enabled: false
  EnforcedStyle: both
  SupportedStyles:
  - both
  - case
  - if
Style/MixinGrouping:
  Description: Checks for grouping of mixins in `class` and `module` bodies.
  Enabled: true
  EnforcedStyle: separated
  StyleGuide: "#mixin-grouping"
  SupportedStyles:
  - grouped
  - separated
Style/ModuleFunction:
  Description: Checks for usage of `extend self` in modules.
  Enabled: true
  EnforcedStyle: module_function
  StyleGuide: "#module-function"
  SupportedStyles:
  - extend_self
  - module_function
Style/MultilineBlockChain:
  Description: Avoid multi-line chains of blocks.
  Enabled: true
  StyleGuide: "#single-line-blocks"
Style/MultilineIfModifier:
  Description: Only use if/unless modifiers on single line statements.
  Enabled: true
  StyleGuide: "#no-multiline-if-modifiers"
Style/MultilineIfThen:
  Description: Do not use then for multi-line if/unless.
  Enabled: true
  StyleGuide: "#no-then"
Style/MultilineMemoization:
  Description: Wrap multiline memoizations in a `begin` and `end` block.
  Enabled: true
  EnforcedStyle: keyword
  SupportedStyles:
  - braces
  - keyword
Style/MultilineTernaryOperator:
  Description: 'Avoid multi-line ?: (the ternary operator); use if/unless instead.'
  Enabled: true
  StyleGuide: "#no-multiline-ternary"
Style/MultipleComparison:
  Description: Avoid comparing a variable with multiple items in a conditional, use
    Array#include? instead.
  Enabled: true
Style/MutableConstant:
  Description: Do not assign mutable objects to constants.
  Enabled: false
Style/NegatedIf:
  Description: Favor unless over if for negative conditions (or control flow or).
  Enabled: true
  EnforcedStyle: both
  StyleGuide: "#unless-for-negatives"
  SupportedStyles:
  - both
  - postfix
  - prefix
Style/NegatedWhile:
  Description: Favor until over while for negative conditions.
  Enabled: true
  StyleGuide: "#until-for-negatives"
Style/NestedModifier:
  Description: Avoid using nested modifiers.
  Enabled: true
  StyleGuide: "#no-nested-modifiers"
Style/NestedParenthesizedCalls:
  Description: Parenthesize method calls which are nested inside the argument list
    of another parenthesized method call.
  Enabled: true
  Whitelist:
  - be
  - be_a
  - be_an
  - be_between
  - be_falsey
  - be_instance_of
  - be_kind_of
  - be_truthy
  - be_within
  - end_with
  - eq
  - eql
  - include
  - match
  - raise_error
  - respond_to
  - start_with
Style/NestedTernaryOperator:
  Description: Use one expression per branch in a ternary operator.
  Enabled: true
  StyleGuide: "#no-nested-ternary"
Style/Next:
  Description: Use `next` to skip iteration instead of a condition at the end.
  Enabled: true
  EnforcedStyle: skip_modifier_ifs
  MinBodyLength: 3
  StyleGuide: "#no-nested-conditionals"
  SupportedStyles:
  - always
  - skip_modifier_ifs
Style/NilComparison:
  Description: Prefer x.nil? to x == nil.
  Enabled: true
  StyleGuide: "#predicate-methods"
Style/NonNilCheck:
  Description: Checks for redundant nil checks.
  Enabled: true
  IncludeSemanticChanges: false
  StyleGuide: "#no-non-nil-checks"
Style/Not:
  Description: Use ! instead of not.
  Enabled: true
  StyleGuide: "#bang-not-not"
Style/NumericLiteralPrefix:
  Description: Use smallcase prefixes for numeric literals.
  Enabled: true
  EnforcedOctalStyle: zero_with_o
  StyleGuide: "#numeric-literal-prefixes"
  SupportedOctalStyles:
  - zero_only
  - zero_with_o
Style/NumericLiterals:
  Description: Add underscores to large numeric literals to improve their readability.
  Enabled: true
  MinDigits: 5
  Strict: false
  StyleGuide: "#underscores-in-numerics"
Style/NumericPredicate:
  AutoCorrect: false
  Description: Checks for the use of predicate- or comparison methods for numeric
    comparisons.
  Enabled: false
  EnforcedStyle: predicate
  Exclude:
  - spec/**/*
  StyleGuide: "#predicate-methods"
  SupportedStyles:
  - comparison
  - predicate
Style/OneLineConditional:
  Description: Favor the ternary operator(?:) over if/then/else/end constructs.
  Enabled: true
  StyleGuide: "#ternary-operator"
Style/OptionHash:
  Description: Don't use option hashes when you can use keyword arguments.
  Enabled: false
  SuspiciousParamNames:
  - args
  - options
  - opts
  - parameters
  - params
Style/OptionalArguments:
  Description: Checks for optional arguments that do not appear at the end of the
    argument list
  Enabled: true
  StyleGuide: "#optional-arguments"
Style/ParallelAssignment:
  Description: Check for simple usages of parallel assignment. It will only warn when
    the number of variables matches on both sides of the assignment.
  Enabled: true
  StyleGuide: "#parallel-assignment"
Style/ParenthesesAroundCondition:
  AllowSafeAssignment: true
  Description: Don't use parentheses around the condition of an if/unless/while.
  Enabled: true
  StyleGuide: "#no-parens-around-condition"
Style/PercentLiteralDelimiters:
  Description: Use `%`-literal delimiters consistently
  Enabled: true
  PreferredDelimiters:
    "%I": "[]"
    "%W": "[]"
    "%i": "[]"
    "%r": "{}"
    "%w": "[]"
    default: "()"
  StyleGuide: "#percent-literal-braces"
Style/PercentQLiterals:
  Description: Checks if uses of %Q/%q match the configured preference.
  Enabled: true
  EnforcedStyle: lower_case_q
  SupportedStyles:
  - lower_case_q
  - upper_case_q
Style/PerlBackrefs:
  Description: Avoid Perl-style regex back references.
  Enabled: true
  StyleGuide: "#no-perl-regexp-last-matchers"
Style/PreferredHashMethods:
  Description: Checks use of `has_key?` and `has_value?` Hash methods.
  Enabled: true
  EnforcedStyle: short
  StyleGuide: "#hash-key"
  SupportedStyles:
  - short
  - verbose
Style/Proc:
  Description: Use proc instead of Proc.new.
  Enabled: true
  StyleGuide: "#proc"
Style/RaiseArgs:
  Description: Checks the arguments passed to raise/fail.
  Enabled: false
  EnforcedStyle: exploded
  StyleGuide: "#exception-class-messages"
  SupportedStyles:
  - compact
  - exploded
Style/RedundantBegin:
  Description: Don't use begin blocks when they are not needed.
  Enabled: true
  StyleGuide: "#begin-implicit"
Style/RedundantException:
  Description: Checks for an obsolete RuntimeException argument in raise/fail.
  Enabled: true
  StyleGuide: "#no-explicit-runtimeerror"
Style/RedundantFreeze:
  Description: Checks usages of Object#freeze on immutable objects.
  Enabled: true
Style/RedundantParentheses:
  Description: Checks for parentheses that seem not to serve any purpose.
  Enabled: true
Style/RedundantReturn:
  AllowMultipleReturnValues: false
  Description: Don't use return where it's not required.
  Enabled: true
  StyleGuide: "#no-explicit-return"
Style/RedundantSelf:
  Description: Don't use self where it's not needed.
  Enabled: true
  StyleGuide: "#no-self-unless-required"
Style/RegexpLiteral:
  AllowInnerSlashes: false
  Description: Use / or %r around regular expressions.
  Enabled: false
  EnforcedStyle: slashes
  StyleGuide: "#percent-r"
  SupportedStyles:
  - mixed
  - percent_r
  - slashes
Style/RescueModifier:
  Description: Avoid using rescue in its modifier form.
  Enabled: true
  StyleGuide: "#no-rescue-modifiers"
Style/SafeNavigation:
  ConvertCodeThatCanStartToReturnNil: false
  Description: This cop transforms usages of a method call safeguarded by a check
    for the existance of the object to safe navigation (`&.`).
  Enabled: false
Style/SelfAssignment:
  Description: Checks for places where self-assignment shorthand should have been
    used.
  Enabled: true
  StyleGuide: "#self-assignment"
Style/Semicolon:
  AllowAsExpressionSeparator: false
  Description: Don't use semicolons to terminate expressions.
  Enabled: true
  StyleGuide: "#no-semicolon"
Style/Send:
  Description: Prefer `Object#__send__` or `Object#public_send` to `send`, as `send`
    may overlap with existing methods.
  Enabled: false
  StyleGuide: "#prefer-public-send"
Style/SignalException:
  Description: Checks for proper usage of fail and raise.
  Enabled: true
  EnforcedStyle: only_raise
  StyleGuide: "#prefer-raise-over-fail"
  SupportedStyles:
  - only_fail
  - only_raise
  - semantic
Style/SingleLineBlockParams:
  Description: Enforces the names of some block params.
  Enabled: false
  Methods:
  - inject:
    - acc
    - elem
  - reduce:
    - acc
    - elem
Style/SingleLineMethods:
  AllowIfMethodIsEmpty: true
  Description: Avoid single-line methods.
  Enabled: true
  StyleGuide: "#no-single-line-methods"
Style/SpecialGlobalVars:
  Description: Avoid Perl-style global variables.
  Enabled: true
  EnforcedStyle: use_english_names
  StyleGuide: "#no-cryptic-perlisms"
  SupportedStyles:
  - use_english_names
  - use_perl_names
Style/StabbyLambdaParentheses:
  Description: Check for the usage of parentheses around stabby lambda arguments.
  Enabled: true
  EnforcedStyle: require_parentheses
  StyleGuide: "#stabby-lambda-with-args"
  SupportedStyles:
  - require_no_parentheses
  - require_parentheses
Style/StringLiterals:
  ConsistentQuotesInMultiline: false
  Description: Checks if uses of quotes match the configured preference.
  Enabled: false
  EnforcedStyle: single_quotes
  StyleGuide: "#consistent-string-literals"
  SupportedStyles:
  - double_quotes
  - single_quotes
Style/StringLiteralsInInterpolation:
  Description: Checks if uses of quotes inside expressions in interpolated strings
    match the configured preference.
  Enabled: false
  EnforcedStyle: single_quotes
  SupportedStyles:
  - double_quotes
  - single_quotes
Style/StringMethods:
  Description: Checks if configured preferred methods are used over non-preferred.
  Enabled: false
  PreferredMethods:
    intern: to_sym
Style/StructInheritance:
  Description: Checks for inheritance from Struct.new.
  Enabled: true
  StyleGuide: "#no-extend-struct-new"
Style/SymbolArray:
  Description: Use %i or %I for arrays of symbols.
  Enabled: false
  EnforcedStyle: percent
  MinSize: 0
  StyleGuide: "#percent-i"
  SupportedStyles:
  - brackets
  - percent
Style/SymbolLiteral:
  Description: Use plain symbols instead of string symbols when possible.
  Enabled: true
Style/SymbolProc:
  Description: Use symbols as procs instead of blocks when possible.
  Enabled: true
  IgnoredMethods:
  - define_method
  - respond_to
Style/TernaryParentheses:
  AllowSafeAssignment: true
  Description: Checks for use of parentheses around ternary conditions.
  Enabled: false
  EnforcedStyle: require_no_parentheses
  SupportedStyles:
  - require_no_parentheses
  - require_parentheses
  - require_parentheses_when_complex
Style/TrailingCommaInArguments:
  Description: Checks for trailing comma in argument lists.
  Enabled: true
  EnforcedStyleForMultiline: comma
  StyleGuide: "#no-trailing-params-comma"
  SupportedStylesForMultiline:
  - comma
  - consistent_comma
  - no_comma
Style/TrailingCommaInLiteral:
  Description: Checks for trailing comma in array and hash literals.
  Enabled: true
  EnforcedStyleForMultiline: comma
  StyleGuide: "#no-trailing-array-commas"
  SupportedStylesForMultiline:
  - comma
  - consistent_comma
  - no_comma
Style/TrailingUnderscoreVariable:
  AllowNamedUnderscoreVariables: true
  Description: Checks for the usage of unneeded trailing underscores at the end of
    parallel variable assignment.
  Enabled: true
Style/TrivialAccessors:
  AllowDSLWriters: false
  AllowPredicates: true
  Description: Prefer attr_* methods to trivial readers/writers.
  Enabled: true
  ExactNameMatch: true
  IgnoreClassMethods: false
  StyleGuide: "#attr_family"
  Whitelist:
  - to_a
  - to_ary
  - to_c
  - to_enum
  - to_h
  - to_hash
  - to_i
  - to_int
  - to_io
  - to_open
  - to_path
  - to_proc
  - to_r
  - to_regexp
  - to_s
  - to_str
  - to_sym
Style/UnlessElse:
  Description: Do not use unless with else. Rewrite these with the positive case first.
  Enabled: true
  StyleGuide: "#no-else-with-unless"
Style/UnneededCapitalW:
  Description: Checks for %W when interpolation is not needed.
  Enabled: true
Style/UnneededInterpolation:
  Description: Checks for strings that are just an interpolated expression.
  Enabled: true
Style/UnneededPercentQ:
  Description: Checks for %q/%Q when single quotes or double quotes would do.
  Enabled: true
  StyleGuide: "#percent-q"
Style/VariableInterpolation:
  Description: Don't interpolate global, instance and class variables directly in
    strings.
  Enabled: true
  StyleGuide: "#curlies-interpolate"
Style/WhenThen:
  Description: Use when x then ... for one-line cases.
  Enabled: true
  StyleGuide: "#one-line-cases"
Style/WhileUntilDo:
  Description: Checks for redundant do after while or until.
  Enabled: true
  StyleGuide: "#no-multiline-while-do"
Style/WhileUntilModifier:
  Description: Favor modifier while/until usage when you have a single-line body.
  Enabled: false
  MaxLineLength: 80
  StyleGuide: "#while-as-a-modifier"
Style/WordArray:
  Description: Use %w or %W for arrays of words.
  Enabled: false
  EnforcedStyle: percent
  MinSize: 0
  StyleGuide: "#percent-w"
  SupportedStyles:
  - brackets
  - percent
  WordRegex: !ruby/regexp /\A[\p{Word}\n\t]+\z/
Style/YodaCondition:
  Description: Do not use literals as the first operand of a comparison.
  Enabled: true
  EnforcedStyle: all_comparison_operators
  Reference: https://en.wikipedia.org/wiki/Yoda_conditions
  SupportedStyles:
  - all_comparison_operators
  - equality_operators_only
Style/ZeroLengthPredicate:
  Description: 'Use #empty? when testing for objects of length 0.'
  Enabled: true
